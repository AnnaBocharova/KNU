#include<iostream>
#include<cmath>
#include "Task6.h"
#include "LibFor.h"
#include "LibWhile.h"
#include"Series.h"
#include "Array.h"
using namespace std;
void menuFor()
{
	setlocale(LC_ALL, "rus");
	std::cout << "1.Даны два целых числа A и B (A < B). Вывести в порядке убывания все целые числа, расположенные между A и B(не включая числа A и B), а также	количество N этих чисел." << endl;
	cout << "2.Даны два целых числа A и B (A < B). Найти сумму квадратов всех целых чисел от A до B включительно." << endl;
	cout << "3. Дано целое число N (> 0). Найти сумму 1 + 1 / 2 + 1 / 3 + ... + 1 / N;(вещественное число)." << endl;
	cout << "4.Дано целое число N (> 0). Найти квадрат данного числа, используя дляего вычисления следующую формулу :N2	= 1 + 3 + 5 + ... + (2·N – 1).	После добавления к сумме каждого слагаемого выводить текущее значение суммы(в результате будут выведены квадраты всех целых чисел от 1 до N)." << endl;
	cout << "5. Дано вещественное число A и целое число N (> 0). Используя один цикл,найти значение выражения 1 – A + A2– A3+ ... + (–1)N·AN.Условный оператор не использовать." << endl;
	cout << "6. Дано вещественное число X и целое число N (> 0). Найти значение выражения 1 – X2/ (2!) + X4/ (4!) – ... + (–1)N·X2·N/ ((2·N)!)(N!= 1·2·...·N).Полученное число является приближенным значениемфункции cos в точке X." << endl;
	cout << "7.Дано целое число N (> 0). Найти сумму 1N 2N–1 + ... + N1.Чтобы избе -жать целочисленного переполнения, вычислять слагаемые этой суммы помощью вещественной переменной и выводить результат как вещественное число." << endl;

}
void caseFor()
{
	int nFor;
	cout << "number task" << endl;
	cin >> nFor;
	switch (nFor) {
	case 1: for3(); break;
	case 2: for9(); break;
	case 3: for10(); break;
	case 4: for14(); break;
	case 5: for18(); break;
	case 6: for24(); break;
	case 7: for38(); break;
	}
}
void menuWhile()
{
	setlocale(LC_ALL, "rus");
	cout << "1.Дано целое число N(> 0).Найти двойной факториал N :	N!!= N·(N–2)·(N–4)·...(последний сомножитель равен 2, если N — четное, и 1, если N — нечет -ное).Чтобы избежать целочисленного переполнения, вычислять это произ -ведение с помощью вещественной переменной и вывести его как вещественное число." << endl;
	cout << "2.Дано целое число N (> 1). Найти наименьшее целое число K, при котором выполняется неравенство 3K> N." << endl;
	cout << "3.Дано число A (> 1). Вывести наименьшее из целых чисел K, для которых сумма 1 + 1 / 2 + ... + 1 / K будет больше A, и саму эту сумму." << endl;
	cout << "4.Дано целое число N (> 0). Используя операции деления нацело и взя-тия остатка от деления, найти число, полученное при прочтении числа Nсправа налево." << endl;
	cout << "5.Даны целые положительные числа A и B. Найти их наибольший общий делитель(НОД), используя алгоритм Евклида :НОД(A, B) = НОД(B, A mod B), если B ≠ 0; НОД(A, 0) = A." << endl;
	cout << "6.Дано целое число N (> 1). Последовательность чисел Фибоначчи FK определяется следующим образом :F1 = 1, F2 = 1, FK = FK–2 + FK–1, K = 3, 4, ... .Проверить, является ли число N числом Фибоначчи.Если является, то вывести True, если нет — вывести False." << endl;
	cout << "7.Дано целое число N (> 1), являющееся числом Фибоначчи: N = FK (определение чисел Фибоначчи дано в задании While24).Найти целое число K — порядковый номер числа Фибоначчи N." << endl;


}
void caseWhile()
{
	int nWhile;
	cout << "Enter number of task:" << endl;
	cin >> nWhile;
	switch (nWhile) {
	case 1: while6(); break;
	case 2: while9(); break;
	case 3: while13(); break;
	case 4: while19(); break;
	case 5: while23(); break;
	case 6: while24(); break;
	case 7: while27(); break;


	}
}
void menuSeries()
{
	setlocale(LC_ALL, "rus");
	cout << "1.Дано целое число N и набор из N положительных вещественных чисел.Вывести в том же порядке дробные части всех чисел из данного набора (как вещественные числа с нулевой целой частью), а также произведение всех дробных частей." << endl;
	cout << "2.Дано целое число K и набор ненулевых целых чисел; признак его завершения — число 0. Вывести номер первого числа в наборе, большего K.Если таких чисел нет, то вывести 0." << endl;
	cout << "3.Дано целое число N (> 1) и набор из N вещественных чисел. Если данный набор образует убывающую последовательность, то вывести 0;в противном случае вывести номер первого числа, нарушающего закономерность." << endl;

}
void CaseSeries()
{
	int nSeries;
	cout << "Enter number of task:" << endl;
	cin >> nSeries;
	switch (nSeries) {
	case 1: series6(); break;
	case 2: series15(); break;
	case 3: series22(); break;

	}
}


int main() {
	setlocale(LC_ALL, "rus");
	//menuFor();
	//caseFor();
	//menuWhile();
	//caseWhile();
	//menuSeries();
	//CaseSeries();
	cout << "1.Даны целые числа N (> 2), A и B. Сформировать и вывести целочисленный массив размера N, первый элемент которого равен A, второй равен B, а	каждый последующий элемент равен сумме всех предыдущих." << endl;
	array6();
	return 0;
}


